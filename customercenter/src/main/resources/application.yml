server:
  port: 8080

call:
  number: ${CALLNUM}
---

spring:
  profiles: default
  datasource:
    name: theater
    initialization-mode: always      
    username: kidshim
    password: a12345!2#
    tomcat:
      max-active: 50
      max-idle: 20
      max-wait: 20000
      min-idle: 15
    driver-class-name: org.mariadb.jdbc.Driver
    url: jdbc:mariadb://skycows.cafe24.com:3306/kidshim
  jpa:
    open-in-view: false
    generate-ddl: true
    show-sql: true
    hibernate:
      ddl-auto: update
  cloud:
    stream:
      kafka:
        binder:
          brokers: localhost:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: customercenter
          destination: theater
          contentType: application/json
        event-out:
          destination: theater
          contentType: application/json
logging:
  level:
    org.hibernate.type: trace
    org.springframework.cloud: debug
server:
  port: 8086
---

spring:
  profiles: docker
  datasource:
    name: theater
    initialization-mode: always      
    username: kidshim
    password: a12345!2#
    tomcat:
      max-active: 50
      max-idle: 20
      max-wait: 20000
      min-idle: 15
    driver-class-name: org.mariadb.jdbc.Driver
    url: jdbc:mariadb://175.126.37.48:3306/kidshim
  jpa:
    open-in-view: false
    generate-ddl: true
    show-sql: true
    hibernate:
      ddl-auto: update
  cloud:
    stream:
      kafka:
        binder:
          brokers: my-kafka.kafka.svc.cluster.local:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: customercenter
          destination: theater
          contentType: application/json
        event-out:
          destination: theater
          contentType: application/json
